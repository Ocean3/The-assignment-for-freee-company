/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oodj.assignment;
import java.awt.Dimension;
import java.io.*;
import javax.swing.*;
/**
 *
 * @author tsuta
 */
public class Register extends javax.swing.JFrame{

    /**
     * Creates new form Register
     */
    Login previous;
    public Register() {
        initComponents();        
    }
    
    public Register(Login startup){
         initComponents();
         previous = startup;
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        Account_Type = new javax.swing.ButtonGroup();
        Background = new javax.swing.JPanel();
        Accounttype = new javax.swing.JPanel();
        Buyer = new javax.swing.JRadioButton();
        Seller = new javax.swing.JRadioButton();
        Account_Type_Label = new javax.swing.JLabel();
        Form = new javax.swing.JPanel();
        Password = new javax.swing.JLabel();
        UserName_Text = new javax.swing.JTextField();
        Username = new javax.swing.JLabel();
        Mail = new javax.swing.JLabel();
        ConfirmMail = new javax.swing.JLabel();
        FirstName = new javax.swing.JLabel();
        LastName = new javax.swing.JLabel();
        LastName_Text = new javax.swing.JTextField();
        Phonenumber = new javax.swing.JLabel();
        FirstName_Text = new javax.swing.JTextField();
        Phonenumber_Text = new javax.swing.JTextField();
        ConfirmMail_Text = new javax.swing.JTextField();
        Mail_Text = new javax.swing.JTextField();
        Password_Text = new javax.swing.JPasswordField();
        Button = new javax.swing.JPanel();
        Cancel = new javax.swing.JButton();
        Confirm = new javax.swing.JButton();

        Account_Type.add(Buyer);
        Account_Type.add(Seller);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Background.setLayout(new java.awt.GridBagLayout());

        Buyer.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Buyer.setText("Buyer");

        Seller.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Seller.setText("Seller");

        Account_Type_Label.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Account_Type_Label.setText("Select your account type");

        javax.swing.GroupLayout AccounttypeLayout = new javax.swing.GroupLayout(Accounttype);
        Accounttype.setLayout(AccounttypeLayout);
        AccounttypeLayout.setHorizontalGroup(
            AccounttypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccounttypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AccounttypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AccounttypeLayout.createSequentialGroup()
                        .addComponent(Account_Type_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(AccounttypeLayout.createSequentialGroup()
                        .addGroup(AccounttypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Buyer)
                            .addComponent(Seller))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        AccounttypeLayout.setVerticalGroup(
            AccounttypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccounttypeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Account_Type_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Buyer)
                .addGap(18, 18, 18)
                .addComponent(Seller)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 58, 0, 12);
        Background.add(Accounttype, gridBagConstraints);

        Password.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Password.setText("Password");

        Username.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Username.setText("UserName");

        Mail.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Mail.setText("E-mail");

        ConfirmMail.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        ConfirmMail.setText("Confirm mail");

        FirstName.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        FirstName.setText("First Name");

        LastName.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        LastName.setText("Last Name");

        Phonenumber.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Phonenumber.setText("Phone number");

        javax.swing.GroupLayout FormLayout = new javax.swing.GroupLayout(Form);
        Form.setLayout(FormLayout);
        FormLayout.setHorizontalGroup(
            FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FormLayout.createSequentialGroup()
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Phonenumber)
                            .addComponent(Password))
                        .addGap(18, 18, 18)
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Phonenumber_Text, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(Password_Text)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FormLayout.createSequentialGroup()
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FirstName)
                            .addComponent(LastName)
                            .addComponent(Mail)
                            .addComponent(ConfirmMail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ConfirmMail_Text, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(FirstName_Text)
                            .addComponent(LastName_Text)
                            .addComponent(Mail_Text)))
                    .addGroup(FormLayout.createSequentialGroup()
                        .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UserName_Text)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FormLayout.setVerticalGroup(
            FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FormLayout.createSequentialGroup()
                .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(FormLayout.createSequentialGroup()
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FirstName)
                            .addComponent(FirstName_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LastName)
                            .addComponent(LastName_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FormLayout.createSequentialGroup()
                                .addComponent(Mail)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FormLayout.createSequentialGroup()
                                .addComponent(Mail_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConfirmMail)
                            .addComponent(ConfirmMail_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Phonenumber)
                            .addComponent(Phonenumber_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Username))
                    .addComponent(UserName_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Password)
                    .addComponent(Password_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        Background.add(Form, gridBagConstraints);

        Cancel.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Cancel.setText("Cancel");
        Cancel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelMouseClicked(evt);
            }
        });

        Confirm.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        Confirm.setText("Confirm");
        Confirm.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Confirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConfirmMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ButtonLayout = new javax.swing.GroupLayout(Button);
        Button.setLayout(ButtonLayout);
        ButtonLayout.setHorizontalGroup(
            ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Confirm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Cancel)
                .addContainerGap())
        );
        ButtonLayout.setVerticalGroup(
            ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonLayout.createSequentialGroup()
                .addGroup(ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancel)
                    .addComponent(Confirm))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 371, 43, 0);
        Background.add(Button, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseClicked
        //Go back to the login page
        previous.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CancelMouseClicked

    private void ConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConfirmMouseClicked
        //initialize file to save the member info    
        File file = new File("Textfiles/Customer.txt");
        
        //if all forms are filled up and the user info is not mathched in the file//           
        if(Check() && Checkavailable(file)){
            //write the info into the file//
                Writinguserpersonal(file);
                //go back to the previous page
                previous.setVisible(true);
                this.dispose();
        }
    }//GEN-LAST:event_ConfirmMouseClicked
    
    //initialize new register page 
    public void initial(int x,int y){
        //Set Title//
        this.setTitle("Register");
        //Set size//
        Dimension dim = new Dimension(x,y);
        this.setPreferredSize(dim);
        this.setMaximumSize(dim);
        this.setMinimumSize(dim);
        //Set location on the central of screen//
        this.setLocationRelativeTo(null);
        //the page can't be changeable//
        this.setResizable(false);
    }
    
    //check whether the user info was written
    private boolean Check(){
        //Set the return value
        boolean _return=false;
        String Passwordconverter = new String(Password_Text.getPassword());
        
        //Checking the blank text form
        if(FirstName_Text.getText().isEmpty() || LastName_Text.getText().isEmpty() || Mail_Text.getText().isEmpty() || Phonenumber_Text.getText().isEmpty() || Passwordconverter.isEmpty() || UserName_Text.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill up all information."); 
            return _return;
        }
        //Checking the e-mail address is consistent//
        else if(!(Mail_Text.getText().equals(ConfirmMail_Text.getText()))){
            JOptionPane.showMessageDialog(null, "E-mail address is inconsistent.\nPlease fix it.");
            return _return;
        }
        //Check the user chose account type or not   
        else if(!(Buyer.isSelected()) && !(Seller.isSelected())){
            JOptionPane.showMessageDialog(null, "Choose Account type.");
            return _return;
        }
        
        _return = true;
        return _return;
    }
    
    //Check whether the info is already existing in the file
    private boolean Checkavailable(File file){
        //Set the return value
        boolean _return = true;
        String Passwordconverter = new String(Password_Text.getPassword());
        
        try{
            BufferedReader br= new BufferedReader(new FileReader(file));
            String str;
            
            //search the password in the file
            while((str = br.readLine()) != null){
                //if the password is existing already//
                if(str.equals(Passwordconverter)){
                    //then go to search the username//
                    while((str = br.readLine()) != null){
                        if(UserName_Text.getText().equals(str)){
                        _return = false;
                        JOptionPane.showMessageDialog(null, "Your username and password have been already used by someone...\nPlease change either of them:)" );
                        return _return;
                        }
                    }
                }
            }
            br.close();
            
        }
    
        catch(FileNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        catch(IOException e){
            JOptionPane.showMessageDialog(null, e);
        }                
        
        return _return;
    }

    /**
         * Following Writinguserpersonal code was referenced from (Paul Deitel, 2012, p566 - p567)
     */
    
    //Writing user personal info into the file
    private void Writinguserpersonal(File file){
        try{
            //Set radiobutton value//
            boolean buy = Buyer.isSelected();
            boolean sel = Seller.isSelected();
            String str  = new String(Password_Text.getPassword());
            
            FileWriter fr = new FileWriter(file,true);
            fr.write("\r\n");
            fr.write(str + "\r\n");
            fr.write(FirstName_Text.getText() + "\r\n");
            fr.write(LastName_Text.getText()+ "\r\n");
            fr.write(ConfirmMail_Text.getText()+ "\r\n");
            fr.write(Phonenumber_Text.getText() + "\r\n");
            fr.write(UserName_Text.getText()+ "\r\n");
            
            //determining the accout type
            if(buy){
                fr.write("Buyer\r\n");
                fr.write("0");
                fr.write(",\r\n");
            }        
            else if(sel){
                fr.write("Seller\r\n");
                fr.write("0\r\n");
                fr.write(",\r\n");
            }       

            fr.close();
            JOptionPane.showMessageDialog(null, "Sign up successful!\nDon't forget to update your payment status before using this application.\nAnyway...Welcome to the preloved system!" );
        }
    
        catch(FileNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        catch(IOException e){
            JOptionPane.showMessageDialog(null, e);
        }                
           
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Account_Type;
    private javax.swing.JLabel Account_Type_Label;
    private javax.swing.JPanel Accounttype;
    private javax.swing.JPanel Background;
    private javax.swing.JPanel Button;
    private javax.swing.JRadioButton Buyer;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Confirm;
    private javax.swing.JLabel ConfirmMail;
    private javax.swing.JTextField ConfirmMail_Text;
    private javax.swing.JLabel FirstName;
    private javax.swing.JTextField FirstName_Text;
    private javax.swing.JPanel Form;
    private javax.swing.JLabel LastName;
    private javax.swing.JTextField LastName_Text;
    private javax.swing.JLabel Mail;
    private javax.swing.JTextField Mail_Text;
    private javax.swing.JLabel Password;
    private javax.swing.JPasswordField Password_Text;
    private javax.swing.JLabel Phonenumber;
    private javax.swing.JTextField Phonenumber_Text;
    private javax.swing.JRadioButton Seller;
    private javax.swing.JTextField UserName_Text;
    private javax.swing.JLabel Username;
    // End of variables declaration//GEN-END:variables
}
